generator client {
  provider = "prisma-client-js"
}

datasource db {
  // provider = "mysql"
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  email         String         @unique
  password      String?
  role          Role?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  isDeleted     Boolean        @default(false)
  applications  Application[]
  jobs          Job[]          
  notifications Notification[]
  profile       Profile?

  @@map("users")
}

model Profile {
  id        String  @id @default(uuid())
  firstName String
  lastName  String
  image     String? @db.VarChar(255)
  bio       String?
  userId    String  @unique
  user      User    @relation(fields: [userId], references: [id])
  isDeleted Boolean @default(false)

  @@map("profiles")
}

model Job {
  id           String        @id @default(uuid())
  title        String
  description  String
  requirements String
  salary       Float
  location     String
  image        String?       @db.VarChar(255)
  deadline     DateTime
  employerId   String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  isDeleted    Boolean       @default(false)
  applications Application[]
  employer     User          @relation(fields: [employerId], references: [id])

  @@map("jobs")
}

model Application {
  id          String            @id @default(uuid())
  jobId       String
  userId      String
  resumeUrl   String
  coverLetter String
  status      ApplicationStatus @default(PENDING)
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  isDeleted   Boolean           @default(false)
  job         Job               @relation(fields: [jobId], references: [id])
  user        User              @relation(fields: [userId], references: [id])

  @@map("applications")
}

model Notification {
  id        String   @id @default(uuid())
  message   String
  read      Boolean  @default(false)
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isDeleted Boolean  @default(false)
  user      User     @relation(fields: [userId], references: [id])

  @@map("notifications")
}

enum Role {
  ADMIN
  EMPLOYER
  JOB_SEEKER
}

enum ApplicationStatus {
  PENDING
  REVIEWED
  ACCEPTED
  REJECTED
}
